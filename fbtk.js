// vim:set fileencoding=utf-8:
// Author: Mathias Rav
// Date: May 22, 2013
// encoding test: rød grød med fløde æ ø å

function year_prefix(year) {
	year = 2012 - year;
	var prefixes = ['', 'G', 'B', 'O', 'TO'];
	if (0 <= year && year < prefixes.length) {
		return prefixes[year];
	}
	var exponent = (year - 3)+'';
	var exponentString = '';
	var s = ['⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹']
	for (var i = 0; i < exponent.length; ++i)
		exponentString += s[exponent.charCodeAt(i) - 48];
	return 'T'+exponentString+'O';
}

function title_bling(title) {
	if (title == "KASS") return "KA$$";
	if (title == 'CERM') return "\u2102ERM"; // complex C
	if (title == 'VC') return "V\u2102";

	return title;
}

var svg = {};

var TK = (
'<span '+
'style="vertical-align: -0.4pt">T</span><span '+
'style="font-weight: bold">&Aring;</span>G<span '+
'style="display: inline-block; transform: rotate(8deg); -webkit-transform: rotate(8deg)">E</span><span '+
'style="vertical-align: -0.6pt">K</span><span '+
'style="vertical-align: 0.2pt; font-weight: bold">A</span><span '+
'style="vertical-align: -0.6pt">M</span><span '+
'style="display: inline-block; transform: rotate(-8deg); -webkit-transform: rotate(-8deg); font-weight: bold">M</span>ER');
var TKET = TK + '<span style="vertical-align: 0.6pt">ET</span>';

///////////////////////////////////////////////////////////////////////////////
// Callback generator for add_alias.
///////////////////////////////////////////////////////////////////////////////
function insert_TK_html(h) {
	return function (n, orig_string) {
		var replaced = document.createElement('span');
		replaced.style.fontFamily = 'monospace';
		replaced.style.display = 'inline-block';
		replaced.style.whiteSpace = 'nowrap';
		replaced.innerHTML = h;
		n.parentNode.insertBefore(replaced, n);
	};
}

var aliases = {'replacements': {}, 'targets': []};

///////////////////////////////////////////////////////////////////////////////
// Add a text replacement.
//
// `source` is a string to watch for in DOM text nodes.
// Whenever `source` is found, the function `destination` is invoked with two
// parameters: the insertion point of the replacement text, and the original
// replaced text.
///////////////////////////////////////////////////////////////////////////////
function add_alias(source, destination) {
	aliases.targets.push(source);
	aliases.replacements[source] = destination;
}
add_alias('TÅGEKAMMERET', insert_TK_html(TKET));
add_alias('TÅGEKAMMER', insert_TK_html(TK));

var alias_regexp;
function compute_alias_regexp() {
	alias_regexp = new RegExp(aliases.targets.join('|'));
}
compute_alias_regexp();

///////////////////////////////////////////////////////////////////////////////
// Parse input line to an object.
///////////////////////////////////////////////////////////////////////////////
function parse_alias(line) {
	var prefixed = /^(\d+) +([^ ]+) +(.*)/.exec(line);
	if (prefixed) {
		return {'name': prefixed[3],
			'year': prefixed[1],
			'title': prefixed[2]};
	}
	var hangaround = /^"([^"]*)" +(.*)/.exec(line);
	if (hangaround) {
		return {'name': hangaround[2],
			'title': hangaround[1]};
	}
	return null;
}

///////////////////////////////////////////////////////////////////////////////
// Parse input lines, sending objects to a callback function.
///////////////////////////////////////////////////////////////////////////////
function parse_aliases(input, cb) {
	var lineMatch;
	var re = /^.+$/mg;
	while (lineMatch = re.exec(input)) {
		var line = lineMatch[0];
		var parsed = parse_alias(line);
		cb(parsed, line);
	}
}

///////////////////////////////////////////////////////////////////////////////
// Given a parsed input line object, produce the fancy unicode text to insert.
///////////////////////////////////////////////////////////////////////////////
function make_title(o) {
	var title = o.title;
	var fancy = title_bling(o.title);
	if ('year' in o) {
		var year = o.year;
		if (title == 'FUAN') {
			fancy = year_prefix(year) + fancy;
		} else if (title.substring(0, 2) != 'FU') {
			fancy = year_prefix(year) + fancy;
		} else {
			// FU; no prefix
		}
	}
	return fancy;
}

function icon_eligible(n) {
	return true;
	while (n) {
		if (n.classList
		    && (n.classList.contains("cover")
			|| n.classList.contains("uiContextualLayer"))) return true;
		n = n.parentNode;
	}
}

///////////////////////////////////////////////////////////////////////////////
// Callback generator for add_alias.
///////////////////////////////////////////////////////////////////////////////
function insert_alias(str, prefixSVG) {
	return function (n, orig_string) {
		if (svg[prefixSVG] && icon_eligible(n)) {
			var before = document.createElement('span');
			before.innerHTML = svg[prefixSVG];
			n.parentNode.insertBefore(before, n);
		}
		var replaced = document.createElement('span');
		replaced.title = orig_string;
		replaced.className = 'tk_title';
		replaced.textContent = str;
		n.parentNode.insertBefore(replaced, n);
	};
}

///////////////////////////////////////////////////////////////////////////////
// Given a parsed input line object, add the appropriate alias.
///////////////////////////////////////////////////////////////////////////////
function add_parsed_alias(o, origLine) {
	if (!o) {
		// parse error
		console.log("Failed to parse input line: ["+origLine+"]");
		return;
	}
	var title = make_title(o);
	add_alias(o.name, insert_alias(title, o.title));
}

///////////////////////////////////////////////////////////////////////////////
// Recursively apply transformation to all text nodes in a DOM subtree.
///////////////////////////////////////////////////////////////////////////////
function r(n) {
	if (n.nodeType == 1) {
		// Recurse through all child nodes of this DOM element.
		for (var i = 0, l = n.childNodes.length; i < l; ++i) {
			r(n.childNodes[i]);
		}
	} else if (n.nodeType == 3) {
		// We are in a DOM text node.
		// Replace every occurrence of a real name with an alias.
		// If the node contains x substrings, we split this text node into 2x+1 parts.
		var o = alias_regexp.exec(n.nodeValue);
		while (o) {
			// We currently have n.nodeValue == a+b+c, and b needs to be replaced with f(b).
			// f(b) is not necessarily just a text string; it could be an arbitrary sequence of DOM nodes.
			// Therefore, we split `n` into three parts:
			// A text node containing `a`, the dom nodes `f(b)`, and a text node containing `c`.
			// We have to recurse on `c` (the rest of the text),
			// so in reality we just insert `a` and `f(b)` before `n` and replace `n` with `c`.

			// Insert (possibly empty) text node `a` before `n`:
			var before = document.createTextNode(n.nodeValue.substring(0, o.index));
			if (o.index != 0) n.parentNode.insertBefore(before, n);

			// Insert nodes `f(b)` before n (might be a no-op if f(b) is empty):
			aliases.replacements[o[0]](n, o[0]);

			// Set the text of the `n` node to the remaining (possibly empty) text `c`:
			n.nodeValue = n.nodeValue.substring(o.index + o[0].length, n.nodeValue.length);

			// Find the next occurrence:
			o = alias_regexp.exec(n.nodeValue);
		}
	}
}

if (window.theTKTitleObserver) {
	window.theTKTitleObserver.disconnect();
}

window.theTKTitleObserver = new MutationObserver(function (mutations) {
	for (var i = 0, l = mutations.length; i < l; ++i) {
		var m = mutations[i];
		r(m.target);
	}
});

window.theTKTitleObserver.observe(document.body, {
	'childList': true,
	'characterData': true,
	'subtree': true
});

///////////////////////////////////////////////////////////////////////////////
// Add aliases from input alias specification.
///////////////////////////////////////////////////////////////////////////////
function add_aliases(input) {
	parse_aliases(input, add_parsed_alias);
	compute_alias_regexp();
	r(document.body);
}


var svg_style = 'style="height: 1em; width: 1.5em; margin-right: .3em"';

svg['CERM'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.068 17.413" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="M34.881,0.0625c-2.117,2.6762-5.522,4.2146-8.961,4.1523-6.15,0.2661-12.365,0.149-18.439,0.4301-2.3303-0.0076-4.6543,0.0993-6.7876-0.8949-0.81555,0.9092-0.94121,3.0552-0.21875,4.2188,0.97762-0.2563,0.29189,0.422,0.56252,1.1562,0.56201,0.73839-0.65865,1.53-0.5625,2.4688-0.24705,0.91316,0.26721,2.8015,1.375,2.25,0.95764,0.28102,2.2851,0.02364,2.2188-1.3125,0.20688-1.1612-0.60468-2.3814-0.65625-3.3125,0.33262-0.66883,0.089253-1.4728-0.53125-1.8438,0.74927,0.11229,3.6021-0.71979,2.7636,0.55979-1.1842,3.0193-0.68439,7.6077,2.7677,8.784,4.7724,1.1555,9.7961,0.51388,14.674,0.53759,4.0992-0.06669,7.2016-4.4824,5.7635-8.3501-0.95731-1.4779-0.49732-1.5892,1.0723-1.146,2.1106,0.43796,3.5316,2.1093,5.1777,3.1772,1.1292-1.0512,0.80549-3.2083,0.96875-4.7062-0.0743-2.0404-0.02474-4.407-0.9375-6.1688l-0.126-0.064-0.125,0.0625zm-0.84375,2.3438c-0.50374,2.2915-0.21758,4.7269,0.25,7-3.75-3.6467-9.282-2.8057-14.119-2.9688-3.528,0.2204-7.224-0.395-10.631,0.625-3.7068,1.2978-2.7299,7.9319,1.2813,7.875,4.1686,0.22835,8.4384,0.40417,12.562,0,2.2357-0.24993,3.8284-2.3196,3.5-4.5312,0.06235-1.3105-0.90828-2.3835-1.9375-3.1562,1.321-0.15244,2.68,0.097798,3.0312,1.5625,1.5263,3.3587-1.0851,7.5601-4.7812,7.6562-4.607,0.064-9.529,0.454-14.092-0.345-3.3334-0.753-3.8114-5.087-2.7636-7.8098,1.0484-2.8551,4.638-3.2821,7.413-3.0778,5.626-0.3649,11.576,0.5591,16.944-1.1124,1.2222-0.58864,2.4799-1.2219,3.4375-2.1875l-0.05884,0.29417-0.03491,0.17458zm-32.406,2.5c-0.5521,0.6835,0.3764,2.294-0.75017,2.0937-0.00314-0.6692-0.43424-2.7779,0.74997-2.0938zm4.0312,0.5c1.0239,0.038032,2.9669-0.23448,1.3125,0.6875-0.53519,0.89105-2.6552,0.68586-2.0625-0.6875h0.75zm11.813,1.8125c2.9303,0.11723,7.0915-0.75932,8.5312,2.4688,0.503,1.8882-0.38701,4.2098-2.6016,4.4553-4.3237,0.3568-8.9829,0.40238-13.305-0.11154-3.0086-0.88978-2.7808-6.0443,0.4375-6.5,2.2268-0.33291,4.6344-0.2488,6.9375-0.3125zm-15.563,1.0937zm0.03125,0.15625,0,0.03125,0-0.03125zm0.7812,0.2812-0.0313,0.0312,0.0313-0.0312zm-0.71875,2.5938zm-0.03125,0.375zm0.875,1.6875-0.03125,0.03125,0.03125-0.03125z"/>'+
'</svg>'+
''
);

svg['FORM'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35.43 31.624" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="m16.969-0.21875c-0.94008,0.67959-1.4457,1.7654-1.8717,2.8384-0.8864,1.9655-0.48227,4.3361,0.6369,6.1042,0.44303,2.6926-0.07232,5.4228,0.07854,8.1324-0.0074,1.8303,0.03556,3.6649-0.15625,5.4875-1.1446,0.73864-2.6205,0.64053-3.937,0.77172-3.1919,0.169-6.3932-0.025-9.5638-0.397-0.5958-0.341-0.2032-1.179-0.4105-1.725-0.2296-4.026-0.1555-8.06-0.2769-12.088,0.3143-0.8251,0.8516-1.5599,0.8713-2.4816,0.1056-1.707-0.2597-3.4336-0.8096-5.0407-0.1994-0.5857-0.77193-1.4579-1.468-1.0402-0.58885,0.76106-0.15508,1.8546-0.29301,2.7624-0.090548,8.3626,0.18844,16.726,0.18042,25.087-0.062801,0.60466,0.4082,0.87782,0.92463,0.97872,4.1951,1.749,8.7685,2.1842,13.249,2.6116,4.5118,0.22182,9.0717,0.19779,13.537-0.55155,2.688-0.471,5.326-1.228,7.839-2.294,0.164-9.261,0.13-18.527,0.176-27.787,0.103-0.60547-0.468-1.1847-1.043-0.8179-0.975,0.911-1.192,2.3935-1.553,3.6572-0.27676,1.317-0.17746,2.7057,0.43192,3.9172,0.63629,1.3791,0.33881,2.9214,0.37198,4.3862-0.17458,3.5149-0.09051,7.0358-0.25868,10.55-0.65152,0.47529-1.5612,0.23294-2.3247,0.41676-3.1674,0.16837-6.3861,0.1158-9.4878-0.60426-0.8399-0.36053-1.2828-0.99792-1.675-1.839-0.78612-2.0438-0.53902-4.2903-0.72005-6.4342-0.06179-1.8262-0.26342-3.7028,0.07148-5.5,0.77842-1.175,1.3967-2.5156,1.2923-3.958-0.02748-1.6549-0.64558-3.4339-2.0625-4.3625-0.54015-0.050395-0.61568-1.0079-1.2812-0.84375-0.15163,0.02848-0.34716-0.061391-0.46875,0.0625zm0.40625,0.75c0.614,0.49835,0.693,1.3454,1.125,1.9688,0.79056,1.6319,0.80186,3.6513-0.21875,5.1875-0.73807,1.2659-0.32031,2.8233-0.46742,4.225,0.09746,3.9295-0.06894,7.9027,0.63393,11.785,0.29326,1.4763,1.7572,2.6209,3.2834,2.4008,3.714,0.066,7.503,0.015,11.081-1.098,1.102-0.537,1.841-1.779,1.692-3.044,0.054-4.453,0.236-8.911,0.184-13.362-0.309-1.2135-1.31-2.3235-0.893-3.6404,0.149-1.1844,0.424-2.4006,1.049-3.4222,0.123,2.6307-0.046,5.2666-0.018,7.8999-0.039,6.1899,0.053,12.381-0.17,18.569,0.0887,0.61165-0.84076,0.52832-1.2188,0.78125-6.0088,2.2564-12.533,2.6201-18.887,2.2403-3.588-0.234-7.191-0.677-10.658-1.66-1.0406-0.314-2.1752-0.634-3.0795-1.173-0.22557-0.506,0.02038-1.17-0.09818-1.738-0.11931-8.358-0.24716-16.716-0.15182-25.075,0.40867,0.7412,0.6095,1.6892,0.8254,2.5367,0.2861,1.4406,0.1983,2.9923-0.5754,4.2758-0.38376,1.4762,0.039312,3.0146-0.045113,4.5186,0.056452,3.6499-0.03083,7.3186,0.32674,10.951,0.45209,1.0789,1.8325,1.1981,2.856,1.4967,3.3129,0.71406,6.723,1.1551,10.112,0.87722,1.483-0.3487,2.337-1.7702,2.5-3.2188,0.25836-1.9214,0.13726-3.8727,0.16104-5.8059-0.04723-2.7031,0.1606-5.419,0.004-8.1143-0.319-1.2559-1.36-2.2376-1.317-3.5967-0.081-1.5645,0.597-3.0371,1.465-4.295,0.04703-0.12425,0.27458-0.44011,0.5-0.46875z"/>'+
'</svg>'+
''
);

svg['KASS'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.465 36.358" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="M6.58,0.03125c-2.5676,1.6414-5.301,3.705-6.3438,6.5938,2.2206,5.23,6.9621,9.508,12.485,10.818,1.3657-0.16161,1.8165,0.61957,1.2961,1.9003-0.26538,1.6588-2.3687,1.03-3.4472,1.9784-3.4054,1.728-6.0984,4.927-6.8338,8.741-2.391-0.125-4.9959,2.868-3.0625,4.969,1.2222,1.78,4.1348,1.236,4.9688-0.531,0.54032-0.57051,0.13365-2.1758,1.2812-1.9375,4.7703-1.1393,7.8496-5.4575,9.4063-9.875,1.0326-0.62161,2.1538,0.14055,3.25,0.03125,0.8291,4.6443,4.4551,9.2832,9.375,9.4375,1.5152,0.12583,0.70659,2.0009,1.625,2.8438,1.2935,2.3851,5.032,1.3883,5.3438-1.125,0.52023-2.1558-1.6852-3.6623-3.6562-3.7188-0.91957-4.978-4.7425-9.5423-9.875-10.344-0.16068-1.0266-0.81768-2.3919,0.8454-2.3186,5.418-1.833,10.053-5.608,13.217-10.306,0.179-2.1465-2.024-3.5129-3.275-4.9934-1.202-1.0891-3.072-3.0027-4.706-1.4859-5,2.7344-8.89,7.8883-9.613,13.542-0.427,1.292-1.895,0.263-1.694-0.792-1.321-5.7471-5.376-10.787-10.524-13.458l-0.0625,0.03125zm0.96875,2.0625c4.3385,2.9951,7.7885,7.7984,8.5625,13.125-0.83713,0.62517-1.3936,1.5841-2.4824,0.94471-5.1777-0.991-9.5569-4.755-11.736-9.3202,2.0941-1.1883,3.752-3.1157,5.1562-5.125,0.16667,0.125,0.33333,0.25,0.5,0.375zm22.156-0.0938c1.2703,2.0048,3.0909,3.7101,5.0938,5.0938-3.2037,4.5482-8.0913,8.1041-13.562,9.5312-1.4203,1.1216-0.67995,4.1321-3.0754,4.2151-1.5075,0.05487-3.5302,0.45764-3.6456,2.3854-1.2679,3.5855-4.039,6.9364-7.8415,7.837-1.7464-0.12581-1.9527,1.8554-2.5,3-0.91235,1.4962-3.4974,0.08915-2.4688-1.5,0.75635-1.51,3.2123-0.45312,3.4688-2.3438,0.7151-4.6832,5.0412-7.7069,9.3438-8.9375,1.7923-1.1543,0.2026-4.4227,2.6875-4.875,1.3769-0.0041,3.3917-0.57391,3.0938-2.375,0.93962-5.3422,4.5783-9.8394,9.25-12.312l0.144,0.263,0.011,0.019zm-8.5625,18.656c1.1706,1.3065,3.328,0.4585,4.5544,1.8962,2.5525,1.778,4.684,4.5884,5.1331,7.8226,0.24152,1.4237,1.7643,1.4002,2.8125,1.5312,1.8129,0.88739,0.45892,3.7736-1.3125,2.875-1.4047-0.8045-0.37296-3.0575-2.0625-3.6875-1.8298-0.58789-3.7983-0.45076-5.3438-1.8125-2.4994-1.7703-3.4667-4.8492-4.2812-7.6562-0.75116-0.1548,0.59712-0.79989,0.5-0.96875z"/>'+
'<text transform="matrix(0.70710678,-0.70710678,0.70710678,0.70710678,0,0)" font-size="2.18715px" y="12.469869" x="-1.8658208">'+
'<tspan font-size="5.99965477px" font-family="PosterBodoniBT" fill-rule="nonzero" style="writing-mode:lr-tb;" font-variant="normal" y="12.469869" x="-1.8658208" font-weight="normal" fill="currentColor">$</tspan>'+
'</text>'+
'<text transform="matrix(0.70710678,0.70710678,-0.70710678,0.70710678,0,0)" font-size="2.18715px" y="-13.101097" x="23.619593">'+
'<tspan font-size="5.99965477px" font-family="PosterBodoniBT" fill-rule="nonzero" style="writing-mode:lr-tb;" font-variant="normal" y="-13.101097" x="23.619593" font-weight="normal" fill="currentColor">$</tspan>'+
'</text>'+
'</svg>'+
''
);

svg['NF'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37.345 27.073" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="m12.469,0c-1.1576,0.7232-1.0393,2.6604-1.75,3.6875-2.2353,0.1755-4.6241-0.2191-6.7815,0.0625-0.7378,0.7721-0.3365,2.2247-1.4687,2.4062-0.9828,3.3986-1.7552,7.0348-2.4688,10.469,0.2962,1.231,3.0832,0.958,2.75-0.594,0.0384-1.019,1.3387-2.918,0-3.406-0.5626-0.573,0.3481-2.314,0.4572-3.2909,0.139-1.3722,0.5262,1.7489,1.949,0.6034,1.6056-0.1598-0.2241,1.9165,0.0313,2.9065,0.22687,1.3103,2.9322-0.05712,2.25,1.3125-1.1538,3.2398-2.364,6.54-3.2812,9.8312,0.16931,1.0962-0.65125,3.4268,1.2188,3.0438,7.9107-0.25184,15.871,0.18484,23.75-0.125,2.0179-1.3589,3.7461-3.3483,5.4375-5.0625,0.01932-3.9588-0.05124-8.0014,0.15625-11.906,0.83292-0.45759,2.0399,0.039722,2.25-1.1875,0.64201-1.5836,0.38512-3.4831-0.1875-4.9375-2.4911-0.054962-5.1625-0.027581-7.8125-0.0625,0.000499-1.2577,1.2831-2.3955,1-3.5312-5.749-0.24935-11.706-0.16841-17.499-0.2193zm1.531,0.8125c5.033-0.06645,10.062,0.10148,15.094,0.15625-1.266,2.9676-1.797,6.3598-1.219,9.4692-5.48-0.098-10.981-0.09-16.469-0.063-0.805-3.1979-0.198-6.5831,1.282-9.5625h1.3125zm-9.5,3.6563c1.9765,0.17495,4.2107-0.064631,6.0312,0.1875-0.20947,1.4926-0.37228,2.993-0.21875,4.5-1.9997,0.029-4.1364-0.0314-6.062-0.0938-0.3518-1.5028-0.541-3.2176,0.25-4.5937zm26,0.0625c1.4594,0.18225,3.4508-0.33882,4.625,0.21875,0.27662,1.4236,0.42462,2.8934-0.1875,4.2812-1.5851-0.06445-3.4849,0.11816-4.9062-0.125-0.09207-1.4706-0.0085-2.9807,0.28125-4.375h0.1875zm-0.188,5.4062c2.1558-0.44523,1.8706,0.93278-0.05,0.53125-2.1965,0.35297-2.1124-0.848,0.05-0.53125zm3.4062,0.03125c0.20356,3.4072-0.09149,7.3512,0,10.969-0.18333,1.7068-2.2974,2.5058-3.2711,3.8453-1.486,2.167-1.1007-0.8318-0.81238-1.9176,0.90474-3.1,1.8283-6.2556,2.896-9.2715,1.4548-0.19896,0.59735-3.0107,1.1875-3.625zm-24.749,0.0312c2.8657,0.04392,0.69688,0.6687-0.8625,0.375-1.9178-0.021,0.2829-0.619,0.8625-0.375zm23.656,1.625c0.38464,1.8175-1.8241,0.80976-2.8125,1.0625-7.9034-0.24028-15.824,0.02287-23.719-0.09375-0.29874-1.7018,1.2128-1.5635,2.5-1.4062,7.853-0.03783,15.716,0.06203,23.562,0.0625,0.69057-0.15046,0.52639-0.97929,0.46875,0.375zm-17.5,1.8125c1.9591-0.49488,1.5343,0.45545,0.96875,1.75,0.22095,1.0007-0.30684,0.49594-1.125,0.8125-0.38238-0.14264-1.1669-0.22068-1.5938-0.25,0.80821-0.83876-0.0127-2.9278,1.75-2.3125zm16.594,0.125zm-23.219,0.031zm-0.0625,0.0625zm9.0938,0.1875c1.3268-0.4732,1.3642,0.87923,0.78125,1.4688-1.4934,0.06522-1.5522-0.15925-0.78125-1.4688zm-7.031,0.031c-0.19966,1.5314-1.0012,1.6716-0.21875,0h0.21875zm2.625,0.0625c-0.12651,1.5211-1.0135,1.5999-0.21875,0h0.21875zm7.2188,0c1.4581-0.74485,1.2394,1.4328,0.29375,1.4375-1.3554,0.48072-0.67628-0.96108-0.29375-1.4375zm2.5,0c1.2671-0.37702,1.6874,0.30532,1,1.3125-1.1275,0.3152-1.7459,0.06077-1.1562-1.0625,0.0076-0.07878,0.06511-0.23515,0.15625-0.25zm2.875,0.062c1.3122-0.32682,2.1465,0.27521,1.125,1.3438-1.7643,0.015-1.9844,0.33631-1.125-1.3438zm3.6875,0.09375c2.6421-0.44188-0.53764,2.4849-0.875,0.9375,0.31218-0.35447,0.2414-1.0888,0.875-0.9375zm1.7812,1c-0.5253,1.1518-0.84094,3.0998-1.2188,3.875-0.4384-0.64658-1.9131,0.13488-1.125-0.90625,0.56658-0.80119,0.1377-2.2835,1.375-1.8438,0.85793-0.21479,0.79833-1.3916,1.25-2.0312-0.09375,0.30208-0.1875,0.60417-0.28125,0.90625zm-23.125-0.25c-0.70541,0.97463,0.62826,1.2106,1.0938,1.0938-0.70202,0.51741-1.0708,1.6478-1.0625,2.5-1.1992-0.27-1.8701,0.994-1.0827-0.727,0.1551-0.548,1.221-3.643,1.0519-2.867zm16.344,1.0938zm3.125,0.062zm-15.656,0.125,0-0.03125,0,0.03125zm5.75,0zm5.5312,0.03125zm3.0625,0.0625zm-16.593,0.438c1.2309-0.27647,1.6905,0.2176,0.90625,1.25-1.5007,0.20448-2.0669,0.08754-0.90625-1.25zm4.0938,0c0.57441,0.58854-0.37977,1.9363-1.5,1.2812-0.34745-0.14927,0.16087-1.6301,0.95537-1.2418,0.18213,0.0021,0.36248-0.04206,0.54463-0.03949zm1.781,0.032c1.0711-0.42707,1.6171,0.74215,0.6875,1.25-1.7309,0.14005-1.2698-0.02411-0.6875-1.25zm2.9062,0.0625c1.395-0.68157,1.0636,1.3413,0.13796,1.1416-1.238,0.441-0.741-0.917-0.138-1.142zm2.5,0.03125c1.3456-0.76337,1.5976,1.2634,0.375,1.0938-1.4593,0.25343-0.61239-0.3656-0.375-1.0938zm3.7812,0c1.0898-0.21491,0.19442,1.8069-0.6875,1.1562-1.4422,0.29068-0.25768-1.6523,0.6875-1.1562zm2.4688,0.0625c1.1775-0.39664,1.3168,0.57747,0.75,1.1875-1.2195,0.27001-1.89-0.06058-1.0312-1.1562,0.09482,0.0046,0.18643-0.03585,0.28125-0.03125zm-1.625,1.6875zm-3.0312,0zm-2.875-0.032zm1.7812,0.25zm2.8125,0.0625zm-16.562,0.5c1.2827-0.55934,1.2691,1.2371,0.29375,1.25-1.7515,0.74159-1.21-1.2123-0.29375-1.25zm5.625,0c1.25-0.53222,1.3222,0.54893,0.6875,1.1875-1.4138,0.46945-1.5518-0.40515-0.75-1.1875l0.0625-0.03125v0.03125zm-1.7812,0c0.43495,0.84093-0.73902,1.6753-1.7188,1.2188,0.23347-0.99864,0.63475-1.36,1.7188-1.2188zm4.5625,0.0625c1.6351-0.85658,1.8392,1.3708,0.3875,1.1562-1.2532,0.10246-0.71467-0.33749-0.3875-1.1562zm3.6875,0c1.1838-0.41666,0.47964,1.6579-0.39329,1.1729-1.354,0.525-0.611-1.667,0.393-1.172zm3,0.03125c1.0923-0.17836,0.20831,1.7349-0.675,1.125-1.2759,0.36529-0.17181-1.7999,0.675-1.125zm3.375,0c0.09532,1.2232-0.85323,1.309-1.75,1.0938,0.1074-1.1169,0.69826-1.2262,1.75-1.0938zm1.781,0.095c1.504-0.654,1.224,1.447-0.031,1.031-1.17,0.48-0.413-1.095,0.031-1.031zm-21.968,1.594c0.85353,0.64811,2.3663,0.36253,3.0938,0.125,1.0092,0.07494,0.4298,0.73688,0.15625,1.4375,0.2035,1.516-1.507,0.654-2.5625,0.859-2.4842,0.674-0.9845-1.42-0.6876-2.421zm8.7812-0.0625zm14.5,0.34375c-0.15159,1.6098-0.67707,2.7489-2.5305,2.2351-1.0343-0.1182-3.2539,0.54799-2.0411-1.1479,0.35981-0.7839-0.32803-1.3729,0.79035-1.0247,1.162-0.71321,2.5969,0.44288,3.7812-0.28125,0.16927-0.29279,0.04648,0.06022,0,0.21875zm-13.438,0.5625c2.6514,0.16471,5.6908-0.23019,8.125,0.125-0.15495,1.7844-2.4158,0.69492-3.5812,0.96875-3.4389-0.05059-6.9735,0.10763-10.356-0.09375,0.31708-1.8566,2.7537-0.75992,4.081-1.0306,0.57718,0.01022,1.1544,0.02043,1.7315,0.03065zm-4.719,2.437c5.8333,0.01957,11.667,0.03877,17.5,0.03125,0.80574,2.3806-1.431,1.8147-2.9688,1.8438-6.8514-0.12784-13.71,0.04098-20.562-0.0625-0.80861-2.5112,1.8548-1.7604,3.4875-1.8308,0.84793,0.0061,1.6959,0.0122,2.5438,0.0183z"/>'+
'</svg>'+
''
);

svg['PR'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.101 38.825" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="m1.1019,0.051382zm-0.125,0.0625c-1.4984,0.20602-0.82197,2.4746-0.83995,3.5792,0.45296,1.1631,0.01322,2.5688,0.55232,3.627-0.02467,10.251-0.05462,20.527,0.28763,30.763,0.6306,1.144,1.8266-0.239,1.4375-1.157,0.1993-9.965,0.2711-19.97,0.8125-29.906,0.80308-1.0998,0.25427-2.7208,0.71875-4,0.051189-1.0587,0.22761-3.2494-1.25-3-0.53764,0.011825-1.1886-0.096472-1.7188,0.09375zm-0.125,0.5625-0.15625-0.15625,0.15625,0.15625zm32.187,0.68752c-1.439,0.83888-0.19113,2.9766-0.21875,4.25,0.54035,5.5398,0.47839,11.208,0.55948,16.8,0.12593,5.2791-0.07093,10.611,0.34676,15.856,0.23907,1.1776,1.7242,0.25386,1.25-0.6875,0.47568-7.0039,0.36323-14.026,0.57234-21.037,0.03582-3.5022-0.08033-7.1081,0.20892-10.557,0.04054-1.4988,0.79023-3.2117-0.0625-4.5938-0.88359-0.00588-1.6136-0.067295-2.5312-0.1875l-0.125,0.15625zm-14.344,1.7812c-3.186,0.1115-6.417,1.6119-8.43,4.2434-3.1041,3.5045-4.5162,8.3765-5.6006,12.788-0.93692,4.6529-0.18508,10.368,3.25,14,3.3625,2.7299,8.1995,3.0827,12.375,2.5312,6.1352-1.0854,10.1-7.2159,10.781-13.094,0.37337-3.9591,0.39345-8.1439-1.3125-11.75-1.465-1.538-3.947-2.0277-4.656-4.3116-0.808-1.8392-1.589-4.3143-4.047-4.2315-0.762-0.1384-1.552-0.2596-2.359-0.1748zm1.5312,0.875c1.6936-0.13025,3.263,1.0907,3.5938,2.8438,0.85316,2.43,2.722,4.1149,5.0312,5.1875,1.8482,3.1532,1.5925,7.1535,1.4544,10.672-0.3263,6.041-4.6109,12.757-11.035,13.286-3.9556,0.31162-8.6627-0.04496-11.419-3.0825-2.6044-3.672-3.1786-8.056-2.4054-12.406,1.2492-5.613,3.3007-11.911,8.3434-15.187,1.9108-1.1651,4.3413-1.3255,6.4375-1.3125zm-19,0.46875,0-0.0625,0,0.0625zm0.21875,0.125zm0.40625,0.03125zm33.531,0.09375,0-0.28125,0,0.28125zm-33.531,0.03125,0,0.0625,0-0.0625zm-0.28125,0.03125zm0.59375,0.03125,0-0.0625,0,0.0625zm0.6875,0.09375zm0.25,0.15625,0-0.03125,0,0.03125zm32.219,0zm-2,0.125zm0.0625,0.03125c-0.08928,0.55267,0.34211,0.84118,0.15625,1.0312,0.26492,0.26587,0.64552-1.0111,1.7188-0.46875,0.56236-1.2589-1.1887-0.36569-1.875-0.5625zm-30.469,0.09375zm-0.03125,0zm0,0.0625zm-0.03125-0.03125-0.03125,0.03125,0.03125-0.03125zm0.21875,0zm30.813,1.0312zm0.90625,0.03125zm-32.467,0.8441c-0.3336,8.4949-0.4228,17.002-0.6875,25.5-0.0351-8.488-0.2585-16.984-0.0312-25.469,0.23786-0.045053,0.47874-0.029306,0.71875-0.03125zm20.156,2.3125c-2.7332,0.033571-4.3987,3.9718-2.0938,5.6563,1.9796,1.4751,5.7209,0.12988,5.1875-2.6875-0.15792-1.8027-1.0882-3.2638-3.0938-2.9688zm0.40625,0.84375c2.3219,0.07858,2.5494,4.3309,0.09375,4.5312-1.6675,0.46791-3.3175-1.0823-2.7812-2.75,0.36913-1.133,1.5064-1.8104,2.6875-1.7812zm11.875,1.2188zm-0.375,22.688zm-0.0625,0.75c-0.1897,0.32718,0.06999,1.8893-0.1875,2.875,0.73965,0.57307,0.14493-1.273,0.26414-1.7683-0.05772-0.07188-0.01894-1.7604-0.07664-1.1067z"/>'+
'</svg>'+
''
);

svg['SEKR'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.038 48.143" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="M26.844,0.059097c-7.982,0.19847-16.017-0.061377-23.969,0.3125-0.6565-0.01419-1.8252-0.23952-2.25,0.6562-0.67793,0.9556-0.011,2.094-0.125,3.1563-0.14001,0.74926-0.57248,1.744,0,2.5-0.69866,0.96027,0.41783,1.8178-0.125,2.8125,0.46377,1.1679-0.89306,2.3395,0.15625,3.4375-0.61189,1.0642,0.24023,2.1637-0.3125,3.2812,0.064312,0.91674,0.4809,1.5521,0.0625,2.4375,0.073075,0.92226,0.14178,1.6226-0.25,2.4688,0.068139,0.8568,0.73343,1.4295,0.3125,2.3438,0.58116,1.0395-0.74022,1.8625-0.09375,2.9375,0.45441,0.75123-0.7353,1.809,0.21875,2.5625-0.78799,0.82446,0.13935,1.8271-0.3125,2.75,0.033053,0.7526,0.43075,1.1869,0.0625,1.9062,0.0009818,0.71182,0.2826,1.3965,0.0625,2.125,0.5519,0.91156-0.60173,1.7917,0.1875,2.6875-0.32048,1.054-0.37657,2.214-0.46875,3.283,0.22708,1.1481,0.021037,2.2259,0.03125,3.375,0.23864,0.77536-0.25827,1.8546,0.5625,2.5625,1.1634,0.82382,2.802,0.14883,4.1625,0.46875,6.0221,0.01061,12.023-0.32206,18.044-0.04737,4.0649-0.13658,8.2203,0.35021,12.231-0.20263,1.6379-1.1162,0.7581-3.6283,0.86818-5.3312-0.254-13.559-0.077-27.166,0.007-40.7-0.395-2.6236-3.809-1.5649-5.706-1.8352-1.119-0.023001-2.238,0.038947-3.356,0.054033zm1.5625,0.875c2.1025,0.2392,4.5816-0.48701,6.4062,0.5,0.62658,3.2911-0.18388,6.8454,0.09375,10.25,0.01908,11.147-0.12255,22.294,0.09375,33.438,0.29348,1.0123-0.14511,2.3556-1.5497,2.0455-6.6334,0.20237-13.284-0.1443-19.906-0.11863-2.9522,0.18478-6.4585,0.29646-9.0757,0.04186,0.3137-0.805-0.9684-1-0.0621-1.594,0.3325-0.72-0.8579-1.011-0.0937-1.563,0.4917-0.701-1.064-1.066-0.1875-1.344,1.2618-0.793-0.7018-2.444-1.25-1.093-0.4783,0.552,0.0761-1.202,0.9375-0.657,1.0985-0.216,0.7888-1.931-0.1563-1.812,1.5997-0.029,0.3486-2.601-0.6562-1.406-0.5352,0.565-0.0309-1.172,0.75-0.469,1.4626-0.331,0.3533-2.699-0.75-1.594-0.52907,0.93592-0.21869-0.58622,0.5-0.375,1.6099,0.06541,0.88743-2.421-0.375-1.6875-0.438,0.80278-0.46453,0.46421-0.40625-0.34375,0.67276-0.000161,1.9544,0.09981,1.7188-1-0.1422-1.049-1.3617-0.835-1.6564-0.093-0.3376-1.269,2.1145-0.41,1.7188-1.937-0.2546-0.99-1.5576-0.62-1.75,0.218-0.27532-1.4728,1.8152-0.34533,1.8438-1.75,0.082534-1.3225-1.6999-1.3658-1.8125-0.125-0.019043,0.74429-0.366-1.6983,0.84375-1.125,1.4365,0.29115,0.90668-2.4337-0.3125-1.5938-0.51157,0.42182-0.63762,1.6315-0.65625,0.2625-0.33069-1.4392,1.7597-0.20056,1.9375-1.4188,0.1952-1.393-1.9306-1.412-1.8437-0.092-0.198-0.375-0.3051-1.887,0.75-1.563,1.3854,0.069,1.5036-2.116,0.0312-1.937-0.8115-0.025-0.7639,2.209-0.8437,0.406-0.1385-1.292,2.1081-0.282,1.9375-1.719-0.1126-1.352-1.9439-1.018-1.7812,0.219-0.314-0.341-0.3027-2.345,0.7812-1.531,1.5599,0.19891,0.96272-2.4996-0.25-1.7812-0.70074,1.1193-0.74295,0.67933-0.73746-0.54942,0.08674-0.82358,1.1053,0.54531,1.5812-0.32558,1.2182-0.68576-0.51762-2.6271-1.1562-1.1875-0.52415,1.2513-0.86633-1.4895,0.125-0.59375,1.3094,0.37665,1.9266-2.1131,0.25-1.9688-0.75238,0.29788-0.98282,1.5552-0.875-0.01875-0.1284-1.3254,1.5847-0.15184,1.9062-1.325,0.3004-1.2362-1.6786-1.504-1.8125-0.218-0.4902-0.44-0.0142-1.6075,0.9063-1.0939,1.4922-0.2046,0.4366-2.6984-0.5313-1.6875-0.3345,1.0075-0.6891,1.01-0.5624-0.0813,0.3947-0.6637,2.1581-0.1961,1.9687-1.5125-0.217-1.2547-1.853-0.6104-1.8125,0.4063-0.488-0.5361-0.0734-1.8562,0.9375-1.375,0.9692-0.2038,0.978-1.6834,0.1563-1.9375,1.3245-0.5002,0.1614-2.7772-0.9063-1.5313-0.33841,0.053461,0.85616-0.80307,1.2812-0.375,6.8136-0.16723,13.649-0.22835,20.469-0.1875,1.2805-0.069438,2.5603-0.11974,3.8438-0.09375zm-26.562,0.5c0.058366,0.66361-1.191,0.80094-0.40625,0.0625,0.050196-0.18192,0.78299-0.6199,0.40625-0.0625zm1.25,1.75c0.40547-0.010492-0.57241,0.62653-0.5625,1-0.21948-0.71406,0.028634-0.76247,0.5625-1zm-1.5938,0.25zm-0.25,1.625c1.3064,0.0847-0.56523,1.5402-0.1562,0.2812,0.0376-0.086,0.0594-0.2555,0.1562-0.2812zm20.969,1.5c-3.7122,0.1584-7.4863-0.03851-11.156,0.0625-1.094,0.69434-0.3006,2.5969-0.65625,3.8,0.3096,1.5258-0.677,3.557,0.375,4.7938,3.6644,0.50892,7.5646,0.07006,11.312,0.21875,2.1527-0.08253,4.4836,0.29275,6.5312-0.03125,1.0459-1.4358,0.25317-3.608,0.56155-5.3122-0.172-1.1916,0.794-3.9617-1.312-3.5954-1.8857,0.00913-3.7721-0.03488-5.6562,0.0625zm-20.656,0.7187c0.24105,1.0163-0.87551,0.60193-0.34375-0.0625l0.29516,0.053666,0.048589,0.00883zm25.906,0.0625c1.813-0.086826,0.41722,2.7288,0.81272,3.8935-0.26988,1.0204,0.23488,2.6535-0.37522,3.3878-5.4939-0.18871-11.016,0.0774-16.5-0.25-0.33176-2.1479-0.10459-4.6469,0.0625-6.9063,5.2551,0.17988,10.687-0.070548,16-0.125zm-24.062,0.78125zm0.03125,0.15625c-0.36401,0.39502,0.23625,0.72121,0.0625,0.25,0.17002,0.041647-0.00558-0.27704,0.21875-0.53125l-0.2118,0.2121-0.0691,0.0691zm0.21875,0zm-0.0625,0.0625zm-0.0625,0.03125,0.03125-0.03125-0.03125,0.03125zm-2.0625,0.8125zm-0.3125,2.0313c1.1787,0.12442,0.048509,1.7518-0.1875,0.65625-0.00329-0.21024,0.039721-0.52869,0.1875-0.65625zm0.125,2.375zm0.375,0.15625zm-0.156,1.938c1.0529,1.0951-0.97688,1.819-0.375,0.21875,0.034375-0.14127,0.16133-0.4511,0.375-0.21875zm-0.0625,2.5312c1.0902,0.17819-0.44178,1.9639-0.3125,0.75,0.010438-0.20629-0.025002-0.90073,0.3125-0.75zm-0.25,2.5312c1.5261,0.1676-0.56998,1.619-0.28125,0.3125,0.080413-0.06552,0.066452-0.47602,0.28125-0.3125zm0.09375,2.2188c0.82879,0.02349,0.55857,1.1428-0.0625,0.84375,0.00959-0.29702-0.10113-0.62366,0.0625-0.84375zm0.65625,1.4688-0.03125-0.09375,0.03125,0.09375zm-0.5625,0.125zm0.09375,0.0625zm0.125,0.0625zm0,0.03125zm0.1875,0.09375zm-0.5625,0.375c1.2933,0.07529-0.18884,1.9663-0.25,0.5625-0.047831-0.12469,0.04077-0.7125,0.25-0.5625zm-0.0625,2.2812c1.3945-0.13013,0.17487,1.61-0.1875,0.65625-0.008976-0.21792-0.017402-0.53124,0.1875-0.65625zm-0.03125,2.125zm0.4375,1.8125c0.99179,0.45018-1.2946,1.0648-0.40625-0.03125,0.11016-0.04529,0.25309,0.0044,0.40625,0.03125zm-0.3125,1.8125c1.6115,0.26459-0.84874,1.7407-0.0625,0.0625-0.014731-0.03556,0.026935-0.07723,0.0625-0.0625zm-0.03125,2.125zm0.0314,1.72c1.7752,0.20061-0.7673,1.5156-0.09375,0.125,0.00227-0.04298,0.063135-0.12415,0.09375-0.125zm0.25,1.2812-0.0625,0.03125,0.0625-0.03125zm0.15625,0.25zm0.03125-0.09375zm2.0625-0.125,0.03125-0.09375-0.03125,0.09375zm-0.40625,0.0625,0.03125,0-0.03125,0zm-1.8125-0.03125zm-0.21875,0.09375zm0.25,0.125zm1.875-0.125zm-0.375,0.40625c0.99427,0.14413-0.36335,0.48237-0.34375,1.125,0.09012-0.38-0.29088-1.0753,0.34375-1.125zm-1.7812,0.21875c0.96422,0.0848,0.16768,0.77066-0.28125,0.46875,0.055422-0.0583,0.059991-0.62188,0.28125-0.46875zm-0.375,1.8125c0.71722,0.26672,1.1657,0.29671,0.125,0.40625-0.43731,0.39723-0.23728-0.2251-0.125-0.40625zm0.71875,1.2188zm-0.03125,0.6875c-1.1747,0.28151,1.0751,0.28181,0.3125,0.03125,0.047873-0.1663-0.26478,0.09334-0.3125-0.03125zm1.4375-0.03125c0.80491-0.01508-0.32275,0.31978-0.34375,0.59375-0.040832-0.28668,0.027791-0.56702,0.34375-0.59375zm-1.2813,0.844zm-0.8125,0.71875zm1.9688,0.125zm-1.1875,0.78125zm-0.78125,1.0312c0.48887,0.02642,1.6533,0.81094,0.71875,0.90625-0.44223,0.1265-0.75799-0.64105-0.71875-0.90625z"/>'+
'</svg>'+
''
);

svg['VC'] = (
'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.637 55.558" '+svg_style+' version="1.1">'+
'<defs></defs>'+
'<path fill-rule="nonzero" fill="currentColor" d="M31.63,0.030801c-9.757,0.29949-19.591-0.093658-29.312,0.4375-2.2075,1.2065-1.6909,4.3399-1.4063,6.4375,0.84038,2.4913,3.9757,1.4359,5.9874,1.555,1.3662-0.3252,1.261,0.1131,1.0751,1.1638,0.2654,1.2444-2.4251,0.18683-3.3125,0.53125-1.4152-0.03752-3.0631-0.08669-3.5,1.5625-1.2307,4.0498-0.78095,8.4668-1.0768,12.694-0.037666,7.5011-0.80006,15.636,3.0768,22.369,2.3652,4.7243,7.0793,8.083,12.391,8.5424,4.8583,0.70011,10.212-0.06187,13.773-3.695,4.881-4.3136,6.9935-11.01,6.9249-17.403,0.004-6.9301,0.65585-13.868,0.25797-20.791,0.15426-2.1126-1.586-3.9735-3.7377-3.6301-1.2084-0.098695-2.5145,0.17651-3.6714-0.022851,0.2022-0.67601-0.56761-1.5178,0.625-1.1562,1.9243-0.18639,4.7906,0.75321,5.9699-1.2221,0.69167-2.1329,0.90738-4.4634,0.03013-6.5591-1.1769-0.87583-2.6792-0.89289-4.0938-0.8125zm0.375,1.5937c1.0251,0.051159,3.1024-0.28156,2.5938,1.3938-0.1724,1.2839,0.70322,4.0947-1.3674,3.9062-8.072,0.2853-16.145-0.411-24.22-0.0947-2.148,0.0226-4.3017,0.0245-6.4442-0.1427-0.4053-1.5168-0.6093-3.2803,0.25-4.6875,9.7241-0.3874,19.459-0.2077,29.187-0.375zm-15.188,6.75c1.506,0.033566,3.2482-0.077336,4.625,0.09375-0.3226,0.95592,0.30903,1.9664-1.2812,1.5625-1.3221-0.14303-3.6386,0.53365-4.4062-0.21875,0.35432-0.96574-0.835-1.794,1.0625-1.4375zm16.25,3.0625c2.2875-0.17258,1.7957,2.4247,1.9562,3.9122,0.041,7.302-0.20586,14.611-0.5274,21.905-0.40551,7.3322-5.1414,15.066-12.773,16.558-4.7693,0.3718-10.343,0.09027-13.875-3.4688-4.2983-4.0214-6.2552-10.074-6.1875-15.906-0.16965-7.0585-0.011592-14.258,0.625-21.219,0.25026-2.1777,2.7365-1.1756,4.2558-1.4304,8.8425-0.08063,17.69-0.2315,26.525-0.35087zm-7.9375,5.5938c-5.5382,0.05797-11.153-0.15378-16.656,0.125-2.4615,1.1365-1.8942,4.5095-2.0938,6.7938,0.15885,6.1634-0.43074,12.583,1.7812,18.425,1.7381,4.1613,5.9041,7.4936,10.612,6.875,3.1007,0.11864,6.3026-1.3036,7.814-4.0551,3.5862-5.1793,3.2784-11.771,3.7763-17.807,0.05537-3.0336,0.35748-6.227-0.26524-9.1691-1.1626-1.4973-3.2632-1.302-4.9688-1.1875zm1.625,1.4688c1.2358-0.09082,2.5229,0.63607,2.0698,2.1124,0.13495,6.5243-0.09686,13.141-1.4448,19.481-1.2001,3.6611-3.6903,7.7222-8.0625,7.5625-3.9595,0.55781-7.8196-1.5514-9.4366-5.2106-2.4171-5.0951-1.5659-10.87-2.0009-16.358,0.12169-2.4403-0.19095-5.0576,0.84375-7.275,1.4751-0.65595,3.3255,0.10994,4.95-0.21875,4.3623-0.0074,8.7259,0.02414,13.081-0.09375z"/>'+
'</svg>'+
''
);

add_aliases(
'2003 CERM Sune S. Thomsen\n'+
'2004 VC   Christina Koch Perry\n'+
'2005 CERM Ole Søe Sørensen\n'+
'2005 FORM Dan Beltoft\n'+
'2005 KASS Tanja Kragbæk\n'+
'2005 VC   Rasmus Ragnvald Olofsson\n'+
'2006 CERM Tine Vraast-Thomsen\n'+
'2006 FORM Michael Volf Henneberg\n'+
'2006 KASS Lars Thorhauge\n'+
'2006 NF   Aslak Thorndahl Lindballe\n'+
'2006 PR   Mia Dyhr Christensen\n'+
'2006 SEKR Lasse Vilhelmsen\n'+
'2006 VC   Martin Studsgaard Christensen\n'+
'2007 CERM Johan Sigfred Abildskov\n'+
'2007 FORM Jan Munksgård Baggesen\n'+
'2007 KASS Mads Baggesen\n'+
'2007 NF   Eva Lykkegaard Poulsen\n'+
'2007 PR   Sidse Damgaard\n'+
'2007 SEKR Ninni Schaldemose\n'+
'2007 VC   Kasper Søgaard Deleuran\n'+
'2008 CERM Sofie Kastbjerg\n'+
'2008 FORM Tue Christensen\n'+
'2008 PR   Cecilie Vahlstrup\n'+
'2009 CERM Christian Bladt Brandt\n'+
'2009 FORM Jonas Bæklund\n'+
'2009 KASS Rikke Aagaard\n'+
'2009 NF   Ditte Både Sandkamm\n'+
'2009 PR   Nikolaj Andresen\n'+
'2009 SEKR Anne Clemmensen\n'+
'2009 VC   Troels Tinggaard Hahn\n'+
'2010 FORM Mie Elholm Birkbak\n'+
'2010 KASS Torben Muldvang Andersen\n'+
'2010 NF   Morten Jensen\n'+
'2010 PR   Kristoffer L. Winge\n'+
'2010 SEKR Maria Kragelund\n'+
'2010 VC   Morten Rasmussen\n'+
'2011 CERM Sabrina Tang Christensen\n'+
'2011 FORM Jakob Schultz-Nielsen\n'+
'2011 KASS Britt Fredsgaard\n'+
'2011 NF   Kasper Monrad\n'+
'2011 PR   Marie Kirkegaard\n'+
'2011 SEKR Niels Ramskov Bøje\n'+
'2011 VC   Maiken Haahr Hansen\n'+
'2012 CERM Mads Fabricius\n'+
'2012 FORM Steffen Videbæk Petersen\n'+
'2012 KASS Eva Gjaldbæk Frandsen\n'+
'2012 NF   Johannes Christensen\n'+
'2012 PR   Nana Halle\n'+
'2012 SEKR Jakob Rørsted Mosumgaard\n'+
'2012 VC   Peter Slemming-Adamsen\n'+
'2005 FUJA Jane Drejer\n'+
'2006 FUZA Sarah Zakarias\n'+
'2007 FUAN Kenneth Sejdenfaden Bøgh\n'+
'2007 FUHO Daniel Dalhoff Hviid\n'+
'2007 FUME Mette Aagaard\n'+
'2008 FUAN Andreas Sand Gregersen\n'+
'2008 FUNÉ René Søndergaard\n'+
'2008 FURU Jesper Unna\n'+
'2009 FUBS Sandra Pedersen\n'+
'2009 FUHN Mette Hansen\n'+
'2009 FUXA Christian Fretté\n'+
'2009 FUØL Carina Kjeldahl Møller\n'+
'2009 FUØR Signe Grønborg\n'+
'2010 FUAN Andreas Nikolai Kyed Bovin\n'+
'2010 FUNI Asbjørn Stensgaard\n'+
'2010 FUPH Pernille Hornemann Jensen\n'+
'2010 FUUL Camilla Pedersen\n'+
'2010 FURØ Lærke Rønlev Reinholdt\n'+
'2011 FUFR Anders Friis Jensen\n'+
'2011 FUHR Christina Moeslund\n'+
'2011 FUIØ Mathilde Biørn Madsen\n'+
'2011 FULA Camilla Skree Sørensen\n'+
'2011 FUNU Andreas Bendix Nuppenau\n'+
'2011 FURI Frederik Jerløv\n'+
'2011 FURT Martin Sand\n'+
'2012 FUAN Henrik Lund Mortensen\n'+
'2012 FUCO Jacob Schnedler\n'+
'2012 FUHI Mathias Dannesbo\n'+
'2012 FULI Line Bjerg Sørensen\n'+
'2012 FULO Lone Koed\n'+
'2012 FULS Sara Poulsen\n'+
'2012 FUMO Marianne Ostenfeldt Mortensen\n'+
'2012 FUMY Rasmus Thygesen\n'+
'2012 FUNA Karina Sunds Nielsen\n'+
'2012 FUZU Christian Bonar Zeuthen\n'+
'"ADAM"       Adam Etches\n'+
'"Nissen"     Anders Hauge Nissen\n'+
'"Metal Bo"   Bo Mortensen\n'+
'"CBM"        Christian Brandt Møller\n'+
'"J-DAG"      Jacob Damgaard Jensen\n'+
'"Jen_s"      Jens Kusk Block\n'+
'"EFUIT"      Lauge Mølgaard Hoyer\n'+
'"Have"       Martin Anker Have\n'+
'"Mavraganis" Mathias Jaquet Mavraganis\n'+
'"Rav"        Mathias Rav\n'+
'"Metten"     Mette Lysgaard Schulz\n'+
'"Vester"     Mikkel Bak Vester\n'+
'"M3"         Morten Schaumburg\n'+
'"Cramer"     Morten \'Cramer\' Nikolaj Pløger\n'+
'"#"          Rikke Hein\n'+
'"Sean"       Sean Geggie\n'+
''
);
